CREATE TABLE intvals(val int, color text);
-- Test empty table
SELECT median(val) FROM intvals;
 median 
--------
       
(1 row)

-- Integers with odd number of values
INSERT INTO intvals VALUES
       (1, 'a'),
       (2, 'c'),
       (9, 'b'),
       (7, 'c'),
       (2, 'd'),
       (-3, 'd'),
       (2, 'e');
SELECT * FROM intvals ORDER BY val;
 val | color 
-----+-------
  -3 | d
   1 | a
   2 | c
   2 | e
   2 | d
   7 | c
   9 | b
(7 rows)

SELECT median(val) FROM intvals;
 median 
--------
      2
(1 row)

-- Integers with NULLs and even number of values
INSERT INTO intvals VALUES
       (99, 'a'),
       (NULL, 'a'),
       (NULL, 'e'),
       (NULL, 'b'),
       (7, 'c'),
       (0, 'd');
SELECT * FROM intvals ORDER BY val;
 val | color 
-----+-------
  -3 | d
   0 | d
   1 | a
   2 | e
   2 | d
   2 | c
   7 | c
   7 | c
   9 | b
  99 | a
     | a
     | e
     | b
(13 rows)

SELECT median(val) FROM intvals;
 median 
--------
      2
(1 row)

-- Text values
CREATE TABLE textvals(val text, color int);
INSERT INTO textvals VALUES
       ('erik', 1),
       ('mat', 3),
       ('rob', 8),
       ('david', 9),
       ('lee', 2);
SELECT * FROM textvals ORDER BY val;
  val  | color 
-------+-------
 david |     9
 erik  |     1
 lee   |     2
 mat   |     3
 rob   |     8
(5 rows)

SELECT median(val) FROM textvals;
 median 
--------
 lee
(1 row)

-- Text values even
INSERT INTO textvals VALUES
       ('lea', 2);
SELECT median(val) FROM textvals;
 median 
--------
 
(1 row)

-- Test large table with timestamps
CREATE TABLE timestampvals (val timestamptz);
INSERT INTO timestampvals(val)
SELECT TIMESTAMP 'epoch' + (i * INTERVAL '1 second')
FROM generate_series(0, 100000) as T(i);
SELECT median(val) FROM timestampvals;
            median            
------------------------------
 Thu Jan 01 13:53:20 1970 PST
(1 row)

-- Test timestamptzs even
INSERT INTO timestampvals VALUES
       ('1970-01-02 03:46:41');
SELECT median(val) FROM timestampvals;
             median             
--------------------------------
 Thu Jan 01 13:53:20.5 1970 PST
(1 row)

-- Test timestamps even
CREATE TABLE timestampvals_gmt (val timestamp);
INSERT INTO timestampvals_gmt(val)
SELECT TIMESTAMP 'epoch' + (i * INTERVAL '1 second')
FROM generate_series(0, 3) as T(i);
SELECT median(val) FROM timestampvals_gmt;
           median           
----------------------------
 Thu Jan 01 00:00:01.5 1970
(1 row)

-- Test decimals even
CREATE TABLE decimalvals (val decimal);
INSERT INTO decimalvals VALUES
       (1.125),
       (3.4);
SELECT median(val) FROM decimalvals;
         median         
------------------------
 2.26250000000000000000
(1 row)

-- Test floats even
CREATE TABLE floatvals (val float);
INSERT INTO floatvals VALUES
       (1.125),
       (3.4);
SELECT median(val) FROM floatvals;
 median 
--------
 2.2625
(1 row)

-- Test cash even
CREATE TABLE moneyvals (val money);
INSERT INTO moneyvals VALUES
       ('12.34'),
       ('101.34');
SELECT median(val) FROM moneyvals;
 median 
--------
 $56.84
(1 row)

-- Test intervals even
CREATE TABLE intervalvals (val interval);
INSERT INTO intervalvals VALUES
       ('1 day'),
       ('2 days');
SELECT median(val) FROM intervalvals;
      median      
------------------
 @ 1 day 12 hours
(1 row)

-- Test ints group by
SELECT color, median(val) FROM intvals GROUP BY color;
 color | median 
-------+--------
 d     |      0
 a     |     50
 b     |      9
 c     |      7
 e     |      2
(5 rows)

-- Test parallel usage
SELECT median(val), median(color) FROM intvals;
 median | median 
--------+--------
      2 | c
(1 row)

-- Test parallel usage on a single field
SELECT median(val), median(val) FROM intvals;
 median | median 
--------+--------
      2 |      2
(1 row)

-- Test window context
SELECT median(x) OVER (ORDER BY n ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) FROM (VALUES (1, 1.0::float8), (2, 2.0::float8), (3, 3.0::float8)) AS v (n,x);
 median 
--------
    1.5
    2.5
      3
(3 rows)

-- Test window context with OVER (PARTITION BY) statement
SELECT color, median(val) OVER (PARTITION BY color) from intvals;
 color | median 
-------+--------
 a     |     50
 a     |     50
 a     |     50
 b     |      9
 b     |      9
 c     |      7
 c     |      7
 c     |      7
 d     |      0
 d     |      0
 d     |      0
 e     |      2
 e     |      2
(13 rows)

-- Test moving-aggregate mode
SELECT array_agg(val) OVER (ROWS BETWEEN CURRENT ROW AND 2 FOLLOWING) FROM generate_series(0, 10) as val;
 array_agg 
-----------
 {0,1,2}
 {1,2,3}
 {2,3,4}
 {3,4,5}
 {4,5,6}
 {5,6,7}
 {6,7,8}
 {7,8,9}
 {8,9,10}
 {9,10}
 {10}
(11 rows)

SELECT median(val) OVER (ROWS BETWEEN CURRENT ROW AND 2 FOLLOWING) FROM generate_series(0, 10) as val;
 median 
--------
      1
      2
      3
      4
      5
      6
      7
      8
      9
      9
     10
(11 rows)

